# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        build: ./alfresco
        mem_limit: 1500m
        depends_on:
            - postgres
        environment:
            JAVA_OPTS: "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=127.0.0.1
                -Dshare.port=8080
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE

                -Dlocal.transform.service.enabled=true
                -DlocalTransform.pdfrenderer.url=http://alfresco-pdf-renderer:8090/
                -DlocalTransform.imagemagick.url=http://imagemagick:8090/
                -DlocalTransform.libreoffice.url=http://libreoffice:8090/
                -DlocalTransform.tika.url=http://tika:8090/
                -DlocalTransform.misc.url=http://transform-misc:8090/

                -Dlegacy.transform.service.enabled=true
                -Dalfresco-pdf-renderer.url=http://alfresco-pdf-renderer:8090/
                -Djodconverter.url=http://libreoffice:8090/
                -Dimg.url=http://imagemagick:8090/
                -Dtika.url=http://tika:8090/
                -Dtransform.misc.url=http://transform-misc:8090/

                -Dcsrf.filter.enabled=false
                -Xmx${ALFRESCO_XMX} -Xms${ALFRESCO_XMS}
                "
                #-DlocalTransform.core-aio.url=http://transform-core-aio:8090/
        volumes:
            - ./volumes/data/alf-repo-data:/usr/local/tomcat/alf_data
            - ./volumes/logs/alfresco:/usr/local/tomcat/logs
            - ./volumes/config/alfresco-global.properties:/usr/local/tomcat/shared/classes/alfresco-global.properties

    share:
        build: ./share
        mem_limit: 1g
        depends_on:
            - postgres
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -Xms500m
                -Xmx500m
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                "
        volumes:
            - ./volumes/logs/share:/usr/local/tomcat/logs
            - ./volumes/config/ext-share-config-custom.xml:/usr/local/tomcat/shared/classes/alfresco/web-extension/ext-share-config-custom.xml
            - ./volumes/data/modules/amps_share:/usr/local/tomcat/amps_share


    postgres:
        build: ./postgres
        mem_limit: 512m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: "
            postgres
              -c max_connections=${PG_MAX_CONNECTIONS}
              -c shared_buffers=${PG_SHARED_BUFFERS}
              -c effective_cache_size=${PG_EFFECTIVE_CACHE_SIZE}
              -c maintenance_work_mem=${PG_MAINTENANCE_WORK_MEM}
              -c checkpoint_completion_target=${PG_CHECKPOINT_COMPLETION_TARGET}
              -c wal_buffers=${PG_WAL_BUFFERS}
              -c default_statistics_target=${PG_DEFAULT_STATISTICS_TARGET}
              -c random_page_cost=${PG_RANDOM_PAGE_COST}
              -c effective_io_concurrency=${PG_EFFECTIVE_IO_CONCURRENCY}
              -c work_mem=${PG_WORK_MEM}
              -c min_wal_size=${PG_MIN_WAL_SIZE}
              -c max_wal_size=${PG_MAX_WAL_SIZE}
              -c max_worker_processes=${PG_MAX_WORKER_PROCESSES}
              -c max_parallel_workers_per_gather=${PG_MAX_PARALLEL_WORKERS_PER_GATHER}
              -c max_parallel_workers=${PG_MAX_PARALLEL_WORKERS}
              -c logging_collector=on
              -c log_min_messages=LOG
              -c log_directory=/var/log/postgresql
              "

        ports:
            - 5432:5432
        volumes:
           - ./volumes/data/postgres-data:/var/lib/postgresql/data
           - ./volumes/logs/postgres:/var/log/postgresql

    solr6:
        image: alfresco/alfresco-search-services:2.0.0
        mem_limit: 2g
        depends_on:
            - alfresco
        environment:
            #Solr needs to know how to register itself with Alfresco
            - SOLR_ALFRESCO_HOST=alfresco
            - SOLR_ALFRESCO_PORT=8080
            #Alfresco needs to know how to call solr
            - SOLR_SOLR_HOST=solr6
            - SOLR_SOLR_PORT=8983
            #Create the default alfresco and archive cores
            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
            #HTTP by default
            - ALFRESCO_SECURE_COMMS=none
            - "SOLR_JAVA_MEM=-Xms2g -Xmx2g"
        ports:
            - 8083:8983 #Browser port
        volumes:
            - ./volumes/data/solr-data:/opt/alfresco-search-services/data


    activemq:
        image: alfresco/alfresco-activemq:5.15.8
        mem_limit: 1g
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP

    proxy:
        image: nginx:stable-alpine
        mem_limit: 128m
        depends_on:
            - alfresco
        links:
            - alfresco
            - share
        volumes:
            - ./volumes/config:/etc/nginx/conf.d
            - ./volumes/logs/nginx:/var/log/nginx
            - ./volumes/data/certs/conf:/etc/nginx/tls
        ports:
            - 80:80
            - 443:443

    alfresco-pdf-renderer:
        image: alfresco/alfresco-pdf-renderer:2.1.0
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
        ports:
            - 8090:8090

    imagemagick:
        image: alfresco/alfresco-imagemagick:2.1.0
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
        ports:
            - 8091:8090

    libreoffice:
        image: alfresco/alfresco-libreoffice:2.1.0
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
        ports:
            - 8092:8090

    tika:
        image: alfresco/alfresco-tika:2.1.0
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
        ports:
            - 8093:8090

    transform-misc:
        image: alfresco/alfresco-transform-misc:2.1.0
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
        ports:
            - 8094:8090
